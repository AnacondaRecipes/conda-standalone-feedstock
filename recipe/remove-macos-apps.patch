diff --git a/tests/conftest.py b/tests/conftest.py
index 4dc3a91..f546b23 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -16,7 +16,7 @@ menuinst_pkg_specs = [
         "conda-test/label/menuinst-tests::package_1",
         {
             "win32": "Package 1/A.lnk",
-            "darwin": "A.app/Contents/MacOS/a",
+            "darwin": "A.app",
             "linux": "package-1_a.desktop",
         },
     ),
diff --git a/tests/test_main.py b/tests/test_main.py
index fb658a0..3337193 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ -177,6 +177,14 @@ _pkg_specs_params = pytest.mark.parametrize(
 @_pkg_specs_params
 def test_menuinst_conda(tmp_path: Path, pkg_spec: str, shortcut_path: dict[str, str]):
     "Check 'regular' conda can process menuinst JSONs"
+
+    def _clean_macos_apps(shortcuts: list[Path]):
+        if not sys.platform == "darwin":
+            return
+        for shortcut in shortcuts:
+            if shortcut.exists():
+                shutil.rmtree(shortcut)
+
     env = os.environ.copy()
     env["CONDA_ROOT_PREFIX"] = sys.prefix
     # The shortcut will take 'root_prefix' as the base, but conda-standalone
@@ -184,50 +192,60 @@ def test_menuinst_conda(tmp_path: Path, pkg_spec: str, shortcut_path: dict[str,
     # self-extraction. We override it via 'CONDA_ROOT_PREFIX' in the same
     # way 'constructor' will do it.
     variables = {"base": Path(sys.prefix).name, "name": tmp_path.name}
-    process = run_conda(
-        "create",
-        "-vvv",
-        "-p",
-        tmp_path,
-        "-y",
-        pkg_spec,
-        "--no-deps",
-        env=env,
-        capture_output=True,
-        text=True,
-        check=True,
-    )
-    print(process.stdout)
-    print(process.stderr, file=sys.stderr)
-    assert "menuinst Exception" not in process.stdout
-    assert list(tmp_path.glob("Menu/*.json"))
-    assert any(
-        (folder / shortcut_path[sys.platform].format(**variables)).is_file()
+    shortcuts = [
+        folder / shortcut_path[sys.platform].format(**variables)
         for folder in _get_shortcut_dirs()
-    )
-    process = run_conda(
-        "remove",
-        "-vvv",
-        "-p",
-        tmp_path,
-        "-y",
-        pkg_spec.split("::")[-1],
-        env=env,
-        capture_output=True,
-        text=True,
-        check=True,
-    )
-    print(process.stdout)
-    print(process.stderr, file=sys.stderr)
-    assert all(
-        not (folder / shortcut_path[sys.platform].format(**variables)).is_file()
-        for folder in _get_shortcut_dirs()
-    )
+    ]
+    _clean_macos_apps(shortcuts)
+    try:
+        process = run_conda(
+            "create",
+            "-vvv",
+            "-p",
+            tmp_path,
+            "-y",
+            pkg_spec,
+            "--no-deps",
+            env=env,
+            capture_output=True,
+            text=True,
+            check=True,
+        )
+        print(process.stdout)
+        print(process.stderr, file=sys.stderr)
+        assert "menuinst Exception" not in process.stdout
+        assert list(tmp_path.glob("Menu/*.json"))
+        assert any(shortcut.exists() for shortcut in shortcuts)
+        process = run_conda(
+            "remove",
+            "-vvv",
+            "-p",
+            tmp_path,
+            "-y",
+            pkg_spec.split("::")[-1],
+            env=env,
+            capture_output=True,
+            text=True,
+            check=True,
+        )
+        print(process.stdout)
+        print(process.stderr, file=sys.stderr)
+        assert not any(shortcut.exists() for shortcut in shortcuts)
+    finally:
+        _clean_macos_apps(shortcuts)
 
 
 @_pkg_specs_params
 def test_menuinst_constructor(tmp_path: Path, pkg_spec: str, shortcut_path: str):
     "The constructor helper should also be able to process menuinst JSONs"
+
+    def _clean_macos_apps(shortcuts: list[Path]):
+        if not sys.platform == "darwin":
+            return
+        for shortcut in shortcuts:
+            if shortcut.exists():
+                shutil.rmtree(shortcut)
+
     run_kwargs = dict(capture_output=True, text=True, check=True)
     variables = {"base": Path(sys.prefix).name, "name": tmp_path.name}
     process = run_conda(
@@ -247,43 +265,45 @@ def test_menuinst_constructor(tmp_path: Path, pkg_spec: str, shortcut_path: str)
 
     env = os.environ.copy()
     env["CONDA_ROOT_PREFIX"] = sys.prefix
-    process = run_conda(
-        "constructor",
-        # Not supported in micromamba's interface yet
-        # use CONDA_ROOT_PREFIX instead
-        # "--root-prefix",
-        # sys.prefix,
-        "--prefix",
-        tmp_path,
-        "--make-menus",
-        **run_kwargs,
-        env=env,
-    )
-    print(process.stdout)
-    print(process.stderr, file=sys.stderr)
-    assert any(
-        (folder / shortcut_path[sys.platform].format(**variables)).is_file()
+    shortcuts = [
+        folder / shortcut_path[sys.platform].format(**variables)
         for folder in _get_shortcut_dirs()
-    )
-
-    process = run_conda(
-        "constructor",
-        # Not supported in micromamba's interface yet
-        # use CONDA_ROOT_PREFIX instead
-        # "--root-prefix",
-        # sys.prefix,
-        "--prefix",
-        tmp_path,
-        "--rm-menus",
-        **run_kwargs,
-        env=env,
-    )
-    print(process.stdout)
-    print(process.stderr, file=sys.stderr)
-    assert all(
-        not (folder / shortcut_path[sys.platform].format(**variables)).is_file()
-        for folder in _get_shortcut_dirs()
-    )
+    ]
+    _clean_macos_apps(shortcuts)
+    try:
+        process = run_conda(
+            "constructor",
+            # Not supported in micromamba's interface yet
+            # use CONDA_ROOT_PREFIX instead
+            # "--root-prefix",
+            # sys.prefix,
+            "--prefix",
+            tmp_path,
+            "--make-menus",
+            **run_kwargs,
+            env=env,
+        )
+        print(process.stdout)
+        print(process.stderr, file=sys.stderr)
+        assert any(shortcut.exists() for shortcut in shortcuts)
+
+        process = run_conda(
+            "constructor",
+            # Not supported in micromamba's interface yet
+            # use CONDA_ROOT_PREFIX instead
+            # "--root-prefix",
+            # sys.prefix,
+            "--prefix",
+            tmp_path,
+            "--rm-menus",
+            **run_kwargs,
+            env=env,
+        )
+        print(process.stdout)
+        print(process.stderr, file=sys.stderr)
+        assert not any(shortcut.exists() for shortcut in shortcuts)
+    finally:
+        _clean_macos_apps(shortcuts)
 
 
 def test_python():
diff --git a/tests/test_uninstall.py b/tests/test_uninstall.py
index 9294251..5c4f00f 100644
--- a/tests/test_uninstall.py
+++ b/tests/test_uninstall.py
@@ -263,7 +263,7 @@ def test_uninstallation_menuinst(
             package[0]
             for package in menuinst_pkg_specs
             if any(
-                (folder / package[1][sys.platform].format(**variables)).is_file()
+                (folder / package[1][sys.platform].format(**variables)).exists()
                 for folder in shortcut_dirs
             )
         ]
