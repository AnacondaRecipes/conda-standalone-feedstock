From 2965e04a77233692c06c7a8015f44c8562aab051 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 13 Apr 2020 11:56:03 +0200
Subject: [PATCH 3/3] Remove preload_openssl, it is so so wrong

---
 conda/gateways/connection/download.py | 39 ---------------------------
 1 file changed, 39 deletions(-)

diff --git a/conda/gateways/connection/download.py b/conda/gateways/connection/download.py
index a5d589c6b..649fcbb5e 100644
--- a/conda/gateways/connection/download.py
+++ b/conda/gateways/connection/download.py
@@ -33,51 +33,12 @@ def disable_ssl_verify_warning():
     warnings.simplefilter('ignore', InsecureRequestWarning)
 
 
-def preload_openssl():
-    """Because our openssl library lives in Librar/bin, and because that may not be on PATH
-    if conda.exe in Scripts is called directly, try this preload to avoid user issues."""
-    libbin_path = os.path.join(sys.prefix, 'Library', 'bin')
-    libssl_dllname = 'libssl'
-    libcrypto_dllname = 'libcrypto'
-    libssl_version = '-1_1'
-    libssl_arch = ''
-    if sys.maxsize > 2**32:
-        libssl_arch = '-x64'
-    so_name = libssl_dllname + libssl_version + libssl_arch
-    libssl_path2 = os.path.join(libbin_path, so_name)
-    # if version 1.1 is not found, try to load 1.0
-    if not exists(libssl_path2 + ".dll"):
-        libssl_version = ''
-        libssl_arch = ''
-        libssl_dllname = 'ssleay32'
-        libcrypto_dllname = 'libeay32'
-        so_name = libssl_dllname
-        libssl_path2 = os.path.join(libbin_path, so_name)
-    libssl_path = find_library(so_name)
-    if not libssl_path:
-        libssl_path = libssl_path2
-    # crypto library might exists ...
-    so_name = libcrypto_dllname + libssl_version + libssl_arch
-    libcrypto_path = find_library(so_name)
-    if not libcrypto_path:
-        libcrypto_path = os.path.join(sys.prefix, 'Library', 'bin', so_name)
-    kernel32 = ctypes.windll.kernel32
-    h_mod = kernel32.GetModuleHandleA(libcrypto_path)
-    if not h_mod:
-        ctypes.WinDLL(libcrypto_path)
-    h_mod = kernel32.GetModuleHandleA(libssl_path)
-    if not h_mod:
-        ctypes.WinDLL(libssl_path)
-
-
 @time_recorder("download")
 def download(
         url, target_full_path, md5=None, sha256=None, size=None, progress_update_callback=None
 ):
     if exists(target_full_path):
         maybe_raise(BasicClobberError(target_full_path, url, context), context)
-    if sys.platform == 'win32':
-        preload_openssl()
     if not context.ssl_verify:
         disable_ssl_verify_warning()
 
-- 
2.25.0

